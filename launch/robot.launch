<launch>

<arg name="map" default="false" />
<arg name="explore" default="false" />

<node pkg="rosserial_python" type="serial_node.py" name="serial_node">
  <param name="port" value="/dev/ttyACM0"/>
</node>

<node pkg="tf" type="static_transform_publisher" name="base_link_publisher" args="0.024 0 0 0 0 0 base_link neato_laser 100" />

<!-- neato lidar -->
<node pkg="xv_11_laser_driver" type="neato_laser_publisher" name="lidar" args="_port:=/dev/ttyACM1 _firmware_version:=2" />


<node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter">
    <rosparam command="load" file="/home/ubuntu/lidar_clip.yaml" />
</node>

<node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager"/>

<!--<node pkg="tf" type="static_transform_publisher" name="base_link_publisher_adfasdfa" args="0 0 0 0 0 0 map odom 100" />-->
<include file="/home/ubuntu/kobuki.launch" />

<!-- realsense -->
<node pkg="tf" type="static_transform_publisher" name="camera_link_publisher" args="-0.205 0 0.4 0 0 0 base_link camera_link 100" />
<include file="realsense.launch" />

<!-- smooth vel commands for smoother robot -->

<node pkg="nodelet" type="nodelet" name="smoother" args="load yocs_velocity_smoother/VelocitySmootherNodelet nodelet_manager">

    <!-- parameters -->
    <param name="accel_lim_v" value="0.8" />
    <param name="accel_lim_w" value="3.2" />
    <param name="speed_lim_v" value="1" />
    <param name="speed_lim_w" value="4" />
    <param name="robot_feedback" value="0" />

    <!-- velocity commands I/O -->
    <remap from="smoother/raw_cmd_vel"    to="/raw_cmd_vel"/>
    <remap from="smoother/smooth_cmd_vel" to="/mobile_base/commands/velocity"/>

    <!-- Robot velocity feedbacks -->
    <remap from="smoother/odometry"       to="/odom" />
</node>

<include file="april.launch" />

<group if="$(arg map)">
   <include file="gmapping.launch" />
   <node pkg="kobuki_keyop" type="keyop" name="keyop" output="screen">
    <remap from="keyop/motor_power" to="mobile_base/commands/motor_power"/>
    <remap from="keyop/cmd_vel" to="raw_cmd_vel"/>
    <param name="linear_vel_step"  value="0.1" type="double"/>
    <param name="linear_vel_max"   value="1.5"  type="double"/>
    <param name="angular_vel_step" value="0.33" type="double"/>
    <param name="angular_vel_max"  value="6.6"  type="double"/>
    <param name="wait_for_connection_" value="true" type="bool"/>
   </node>
</group>

<group if="$(arg explore)">
   <include file="exploration.launch" />
</group>

<group unless="$(arg map)">
  <include file="/home/ubuntu/audio.launch" />

  <!-- planning and obstacle avoidance -->
  <include file="planning.launch" />

  <!-- load map -->
  <node name="map_server" pkg="map_server" type="map_server" args="/home/ubuntu/map.yaml"/>
  <include file="amcl.launch" />
  
  <arg name="dotfilepath" default="$(env HOME)/.ros/tree.dot" />

  <node pkg="pi_trees_lib" name="patrol_tree" type="bunnybot.py" output="screen">
    <param name="rate" value="2" />
    <param name="square_size" value="1.0" />
    <param name="n_patrols" value="-1" />
    <param name="low_battery_threshold" value="50" />
    <param name="dotfilepath" value="$(arg dotfilepath)" />
  </node>

  <node pkg="nodelet" type="nodelet" name="object_detector" args="load depth_object_detector/DetectorNodelet camera_nodelet_manager">
   <remap from="image" to="/camera/depth/image_rect" />
   <param name="min_x" value="200" />
   <param name="max_x" value="260" />
   <param name="min_y" value="95" />
   <param name="max_y" value="150" />
   <param name="min_z" value="0.30" />
   <param name="max_z" value="0.66" />
   <param name="min_points" value="10" />
  </node>

</group>

</launch>
